# This is a basic workflow to help you get started with Actions

name: "[Linux] Build go brrrr"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          repository: 'RobertBeckebans/RBDOOM-3-BFG'
          ref: 'v1.5.1'
          submodules: 'recursive'

      # Dependencies
      - name: Get Dependencies
        run: |
          wget 'https://github.com/microsoft/DirectXShaderCompiler/releases/download/v1.7.2212.1/linux_dxc_2023_03_01.x86_64.tar.gz'
          mkdir -pv "$HOME/.local/bin"; tar -xf linux_dxc_2023_03_01.x86_64.tar.gz -C "$HOME/.local/bin" --transform 's|.*bin/dxc|dxc|'; chmod +x "$HOME/.local/bin/dxc"
          sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu `lsb_release -sc` main universe restricted multiverse"
          sudo apt update && sudo apt install cmake \
                                              libsdl2-dev \
                                              libopenal-dev \
                                              libavcodec-dev \
                                              libavformat-dev \
                                              libavutil-dev \
                                              libswscale-dev \
                                              libvulkan-dev

      # Step 1
      - name: "[1/2] Build"
        run: |
          cd neo/; ./cmake-linux-release.sh

      # Step 2
      - name: "[2/2] Build"
        run: |
          cd "$GITHUB_WORKSPACE"
          cd build/; make

      # Upload    
      - name: "Upload"
        uses: actions/upload-artifact@v3.1.2
        with:
            path: "$GITHUB_WORKSPACE/build"
